# Generated by Django 5.1 on 2024-11-12 22:21

import django.core.validators
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Currency code')),
                ('symbol', models.CharField(blank=True, max_length=5, null=True, verbose_name='Currency symbol')),
                ('name', models.CharField(max_length=50, verbose_name='Currency name')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Update date')),
                ('title', models.CharField(max_length=255, verbose_name='Category name')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Category name')),
                ('title_uk', models.CharField(max_length=255, null=True, verbose_name='Category name')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Category name')),
                ('img', models.TextField(blank=True, max_length=100, null=True, verbose_name='Image')),
                ('icon', models.TextField(blank=True, max_length=100, null=True, verbose_name='Icon')),
                (
                    'cat_id_olx',
                    models.IntegerField(blank=True, editable=False, null=True, verbose_name='Category ID OLX'),
                ),
                ('slug', models.SlugField(max_length=255)),
                ('path', models.CharField(blank=True, db_index=True, max_length=255)),
                ('views', models.IntegerField(default=0, verbose_name='Views')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical Category',
                'verbose_name_plural': 'historical Categories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCurrency',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Update date')),
                ('code', models.CharField(db_index=True, max_length=3, verbose_name='Currency code')),
                ('symbol', models.CharField(blank=True, max_length=5, null=True, verbose_name='Currency symbol')),
                ('name', models.CharField(max_length=50, verbose_name='Currency name')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical Currency',
                'verbose_name_plural': 'historical Currencies',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrice',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Update date')),
                (
                    'amount',
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=13,
                        validators=[
                            django.core.validators.MinValueValidator(
                                Decimal('0'), message='Must be greater than or equal to 0.'
                            )
                        ],
                        verbose_name='Amount',
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical Price',
                'verbose_name_plural': 'historical Prices',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Update date')),
                ('title', models.CharField(max_length=255, verbose_name='Product name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Product description')),
                (
                    'status',
                    models.CharField(
                        choices=[('new', 'New'), ('old', 'Old')],
                        default='old',
                        help_text='Product status',
                        max_length=20,
                        verbose_name='Status',
                    ),
                ),
                (
                    'active',
                    models.BooleanField(
                        default=True,
                        help_text='Indicates whether the listing is currently active.Set to False when the item is sold or the listing is no longer relevant.',
                        verbose_name='Active',
                    ),
                ),
                ('views', models.IntegerField(default=0, verbose_name='Views')),
                ('params', models.JSONField(blank=True, default=dict, null=True, verbose_name='Parameters')),
                (
                    'prod_olx_id',
                    models.IntegerField(blank=True, editable=False, null=True, verbose_name='Product OLX ID'),
                ),
                ('slug', models.SlugField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical Product',
                'verbose_name_plural': 'historical Products',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProductImage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                (
                    'image',
                    models.TextField(
                        blank=True,
                        help_text='Дозволені формати зображень: image/jpeg, image/png, image/gif, image/webp',
                        max_length=100,
                        null=True,
                        verbose_name='Image',
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical Product Image',
                'verbose_name_plural': 'historical Product Images',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProductVideo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                (
                    'video',
                    models.TextField(
                        blank=True,
                        help_text='Дозволені формати відео: video/mp4, video/x-m4v, video/quicktime, video/x-msvideo, video/x-ms-wmv, video/wmv, video/x-flv, video/flv, video/x-matroska, video/mkv, video/webm, video/ogg',
                        max_length=100,
                        null=True,
                        verbose_name='Video',
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical Product Videos',
                'verbose_name_plural': 'historical Product Videos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                (
                    'amount',
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=13,
                        validators=[
                            django.core.validators.MinValueValidator(
                                Decimal('0'), message='Must be greater than or equal to 0.'
                            )
                        ],
                        verbose_name='Amount',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
                'db_table': 'price',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('title', models.CharField(max_length=255, verbose_name='Product name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Product description')),
                (
                    'status',
                    models.CharField(
                        choices=[('new', 'New'), ('old', 'Old')],
                        default='old',
                        help_text='Product status',
                        max_length=20,
                        verbose_name='Status',
                    ),
                ),
                (
                    'active',
                    models.BooleanField(
                        default=True,
                        help_text='Indicates whether the listing is currently active.Set to False when the item is sold or the listing is no longer relevant.',
                        verbose_name='Active',
                    ),
                ),
                ('views', models.IntegerField(default=0, verbose_name='Views')),
                ('params', models.JSONField(blank=True, default=dict, null=True, verbose_name='Parameters')),
                (
                    'prod_olx_id',
                    models.IntegerField(blank=True, editable=False, null=True, verbose_name='Product OLX ID'),
                ),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        help_text='Дозволені формати зображень: image/jpeg, image/png, image/gif, image/webp',
                        null=True,
                        upload_to='products/images/%Y/%m/%d',
                        verbose_name='Image',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'db_table': 'product_image',
            },
        ),
        migrations.CreateModel(
            name='ProductVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'video',
                    models.FileField(
                        blank=True,
                        help_text='Дозволені формати відео: video/mp4, video/x-m4v, video/quicktime, video/x-msvideo, video/x-ms-wmv, video/wmv, video/x-flv, video/flv, video/x-matroska, video/mkv, video/webm, video/ogg',
                        null=True,
                        upload_to='products/videos/%Y/%m/%d',
                        verbose_name='Video',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Product Videos',
                'verbose_name_plural': 'Product Videos',
                'db_table': 'product_video',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('title', models.CharField(max_length=255, verbose_name='Category name')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Category name')),
                ('title_uk', models.CharField(max_length=255, null=True, verbose_name='Category name')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Category name')),
                ('img', models.ImageField(blank=True, null=True, upload_to='categories/images', verbose_name='Image')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='categories/icons', verbose_name='Icon')),
                (
                    'cat_id_olx',
                    models.IntegerField(blank=True, editable=False, null=True, verbose_name='Category ID OLX'),
                ),
                ('slug', models.SlugField(max_length=255)),
                ('path', models.CharField(blank=True, max_length=255, unique=True)),
                ('views', models.IntegerField(default=0, verbose_name='Views')),
                (
                    'parent',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='children',
                        to='products.category',
                        verbose_name='Parent category',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'category',
            },
        ),
    ]
